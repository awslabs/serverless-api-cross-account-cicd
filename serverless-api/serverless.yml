# Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

service: product-catalog-service

package:
  exclude:
    - ./**
  include:
    - lambda/*.py

custom:
  stage: ${opt:stage, self:provider.stage}
  region: us-east-1
  memorySize: 128

provider:
  name: aws
  runtime: python3.7
  cfnRole: ${param:cfnRoleArn}
  region: ${self:custom.region}
  memorySize: ${self:custom.memorySize}
  environment:
    DYNAMODB_TABLE: ${self:resources.Resources.ProductCatalogDynamoDBTable.Properties.TableName}
  iamRoleStatements:
    - Effect: Allow
      Action: # Allows lambda to interact with dynamodb
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        arn:aws:dynamodb:${self:custom.region}:${param:targetAccountId}:table/${self:resources.Resources.ProductCatalogDynamoDBTable.Properties.TableName}
  stackTags:
    "category": "goldmine"
    "project_name": "serverless-cross-account-deployment"

functions:
  create:
    handler: lambda/create-product.handler
    events:
      - http:
          path: product/create
          method: post
  find:
    handler: lambda/find-product.handler
    events:
      - http:
          path: product/find/{id}
          method: get

resources:
  Resources:
    ProductCatalogDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: PRODUCT_CATALOG
